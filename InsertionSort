#include <iostream>

//sort given array "arr" of length "size" using insertionSort algorithm
void insertionSort(int * arr, int size){

	//initialize an integer to store array values
	int current;

	//initialize j so that j is not re-allocated every time
	int j;

	//iterate over every index of the array
	for(int i = 0; i < size; i++){

		//store current array element in variable current
		current = arr[i];

		//compare already sorted elements to current unsorted element until current is less than the sorted
		//element or the beginning of the list is reached
		for(j = i-1; j>=0 && current < arr[j]; j--){

				//shift compared element to make space for new element
				arr[j+1] = arr[j];
		}

		//place the previously unsorted element in the determined spot in the list
		arr[j+1] = current;
	}
}

//output array elements on separate lines
void outputList(int * arr, int size){
	for(int i = 0; i<size; i++){
		printf("%d\n", arr[i]);
	}
}

int main(){

	//take in the size of the array
	int n; scanf("%d", &n);

	//initialize array and temporary variable to scan
	int arr[n];
	int num;

	//fill array with integer inputs
	for(int i = 0; i<n; i++){

		scanf("%d", &num);

		arr[i] = num;
	}

	//sort list
	insertionSort(arr,n);

	//output list
	outputList(arr, n);

	return 0;
}
